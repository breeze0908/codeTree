一、TCP/IP/HTTP

1. tcp三次握手的过程， 四次握手结束过程
2. tcp流， udp的数据报，之间有什么区别，为什么TCP要叫做数据流？
	
	TCP(Transmission Control Protocol)传输控制协议：
	该协议主要用于在主机间建立一个虚拟连接，以实现高可靠性的数据包交换。IP协议可以进行IP数据包的分割和组装，但是通过IP协议并不能清楚地了 解到数据包是否顺利地发送给目标计算机。而使用TCP协议就不同了，在该协议传输模式中在将数据包成功发送给目标计算机后，TCP会要求发送一个确认;如 果在某个时限内没有收到确认，那么TCP将重新发送数据包。另外，在传输的过程中，如果接收到无序、丢失以及被破坏的数据包，TCP还可以负责恢复。传输控制协议是一种面向连接的、可靠的、基于字节流的运输层通信协议，通常由IETF的RFC793说明。在简化的计算机网络OSI模型中，它完成运输层所指定的功能。

	UDP (User Datagram Protocol) 用户数据报协议：
	用户数据报协议(UDP)是 ISO参考模型中一种无连接的传输层协议，提供面向事务的简单不可靠信息传送服务。 UDP 协议基本上是 IP 协议与上层协议的接口。 UDP协议适用端口分辨运行在同一台设备上的多个应用程序。由于大多数网络应用程序都在同一台机器上运行，计算机上必须能够确保目的地机器上的软件程序能从源地址机器处获得数据包，以及源计算机能收到正确的回复。这是通过使用UDP 的“端口号”完成的。
	UPD是基于报文的，在接收的时候，每次最多只能读取一个 报文，报文和报文是不会合并的，如果缓冲区小于报文长度，则多出的部分会被丢弃。也就说，如果不指定MSG_PEEK标志，每次读取操作将消耗一个报文。

3. tcp滑动窗口与拥塞控制
4. HTTP状态，及相关应用
5. keeplive

二、数据库优化
1. mysql索引，及其优化， show processlist, explain ,show variable  
2. 事务原理
3. 主从，日志恢复


三、PHP
1. 面向对象思想
2. 设计模式
3. PHP生命周期
4. PHP安全问题
5. Laravel项目


四、常见排序算法
1. 冒泡排序
2. 二分法排序
3. 动态规划，最短路径， BF


五、Linux
1. 进程管理及其通信
2. Socket通信
3. epoll，select
4. top、iotop、netstat, ps, awk, sed 命令，常见问题排查
